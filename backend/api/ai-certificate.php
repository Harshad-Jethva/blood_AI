<?php
header('Content-Type: application/json');
header('Access-Control-Allow-Origin: *');
header('Access-Control-Allow-Methods: POST, OPTIONS');
header('Access-Control-Allow-Headers: Content-Type, Authorization');

require_once '../config/database.php';

// Handle preflight requests
if ($_SERVER['REQUEST_METHOD'] === 'OPTIONS') {
    http_response_code(200);
    exit();
}

if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
    http_response_code(405);
    echo json_encode(['error' => 'Method not allowed']);
    exit();
}

$data = json_decode(file_get_contents('php://input'), true);

if (!$data) {
    http_response_code(400);
    echo json_encode(['error' => 'Invalid JSON data']);
    exit();
}

// Validate required fields
$requiredFields = ['donorName', 'bloodGroup', 'donationDate', 'campName', 'trustName'];
foreach ($requiredFields as $field) {
    if (!isset($data[$field]) || empty($data[$field])) {
        http_response_code(400);
        echo json_encode(['error' => "Missing required field: $field"]);
        exit();
    }
}

try {
    // Generate certificate data
    $certificateData = [
        'donorName' => $data['donorName'],
        'donorAddress' => $data['donorAddress'] ?? '',
        'bloodGroup' => $data['bloodGroup'],
        'donationDate' => $data['donationDate'],
        'campName' => $data['campName'],
        'trustName' => $data['trustName'],
        'certificateNumber' => 'CERT-' . time() . '-' . rand(1000, 9999),
        'donorAge' => $data['donorAge'] ?? '',
        'donorPhone' => $data['donorPhone'] ?? '',
        'donorEmail' => $data['donorEmail'] ?? '',
        'generatedDate' => date('Y-m-d'),
        'qrCode' => 'https://blooddonation.com/cert/' . time(),
        'aiGenerated' => true,
        'created_at' => new MongoDB\BSON\UTCDateTime()
    ];

    // Store certificate in database
    $certificatesCollection = $db->getCollection('certificates');
    $result = $certificatesCollection->insertOne($certificateData);

    if ($result->getInsertedCount() > 0) {
        $certificateData['_id'] = $result->getInsertedId();
        
        // Generate AI-enhanced certificate content
        $certificateContent = generateAICertificate($certificateData);
        
        http_response_code(201);
        echo json_encode([
            'message' => 'Certificate generated successfully',
            'certificate' => $certificateData,
            'content' => $certificateContent
        ]);
    } else {
        http_response_code(500);
        echo json_encode(['error' => 'Failed to generate certificate']);
    }
} catch (Exception $e) {
    http_response_code(500);
    echo json_encode(['error' => 'Database error: ' . $e->getMessage()]);
}

function generateAICertificate($data) {
    // AI-enhanced certificate generation
    $content = [
        'header' => [
            'title' => 'Blood Donation Certificate',
            'subtitle' => 'Certificate of Appreciation for Voluntary Blood Donation',
            'logo' => '❤️',
            'certificateNumber' => $data['certificateNumber']
        ],
        'donorInfo' => [
            'name' => $data['donorName'],
            'bloodGroup' => $data['bloodGroup'],
            'donationDate' => $data['donationDate'],
            'address' => $data['donorAddress']
        ],
        'campInfo' => [
            'name' => $data['campName'],
            'trust' => $data['trustName'],
            'generatedDate' => $data['generatedDate']
        ],
        'message' => 'This certificate is issued in recognition of your noble contribution to humanity through voluntary blood donation. Your selfless act has the potential to save multiple lives and make a significant impact in our community.',
        'signatures' => [
            'campOrganizer' => 'Camp Organizer',
            'trustDirector' => 'Trust Director'
        ],
        'qrCode' => $data['qrCode'],
        'aiFeatures' => [
            'autoGenerated' => true,
            'verified' => true,
            'uniqueId' => $data['certificateNumber']
        ]
    ];
    
    return $content;
}
?> 